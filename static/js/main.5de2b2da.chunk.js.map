{"version":3,"sources":["components/WeatherSearch/index.js","assets/cloudy.gif","assets/sunny.gif","assets/thunder.gif","assets/heavy-rain.gif","assets/mist.gif","assets/overcast.gif","assets/default.jpg","components/WeatherCard/index.js","container/WeatherContainer/index.js","App.js","reportWebVitals.js","index.js"],"names":["WeatherSearch","className","onSubmit","this","props","handleSubmit","type","onChange","handleChange","placeholder","React","Component","WeatherCard","data","console","log","hourWeather","location_data","_","values","bg","defaultBG","condition","code","cloudy","sunny","thunder","mist","heavy_rain","overcast","forecastday","hour","map","item","key","time","text","feelslike_c","src","icon","style","background","error","errorMessage","name","region","country","humidity","wind_dir","wind_kph","title","astro","sunrise","sunset","moonrise","moonset","date","day","WeatherContainer","state","isLoading","weatherData","searchInput","errorText","latitude","longitude","city","getWeather","bind","showPosition","getLocation","getIP","fetch","apiUrl","then","response","json","setState","message","navigator","geolocation","getCurrentPosition","position","lat","coords","long","ip","ok","Error","statusText","e","target","value","preventDefault","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5de2b2da.chunk.js","sourcesContent":["import React from \"react\";\n\nclass WeatherSearch extends React.Component {\n  render() {\n    return (\n      <div className=\"weather-search\">\n        <h1 className=\"logo\">\n          WeatherY<i className=\"wi wi-day-sunny\"></i>\n        </h1>\n        <form\n          className=\"weather-search-form\"\n          onSubmit={this.props.handleSubmit}\n        >\n          <input\n            className=\"search-input\"\n            type=\"text\"\n            onChange={this.props.handleChange}\n            placeholder=\"Search city\"\n          />\n          <button className=\"btn\">Search</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default WeatherSearch;\n","export default __webpack_public_path__ + \"static/media/cloudy.c0b35de4.gif\";","export default __webpack_public_path__ + \"static/media/sunny.25021c58.gif\";","export default __webpack_public_path__ + \"static/media/thunder.310cdb2a.gif\";","export default __webpack_public_path__ + \"static/media/heavy-rain.d2bb0305.gif\";","export default __webpack_public_path__ + \"static/media/mist.8e607e76.gif\";","export default __webpack_public_path__ + \"static/media/overcast.7d61fd8f.gif\";","export default __webpack_public_path__ + \"static/media/default.476de4e4.jpg\";","import React from \"react\";\nimport _ from \"lodash\";\nimport WeatherSearch from \"../WeatherSearch\";\nimport cloudy from \"../../assets/cloudy.gif\";\nimport sunny from \"../../assets/sunny.gif\";\nimport thunder from \"../../assets/thunder.gif\";\nimport heavy_rain from \"../../assets/heavy-rain.gif\";\nimport mist from \"../../assets/mist.gif\";\nimport overcast from \"../../assets/overcast.gif\";\nimport defaultBG from \"../../assets/default.jpg\";\n\nclass WeatherCard extends React.Component {\n  render() {\n    const { data } = this.props;\n    console.log(data);\n    let location_data = _.values(data);\n    // let display = location_data.map(function (item) {\n    //   return <p>{item}</p>;\n    // });\n    let bg = defaultBG;\n    if (data) {\n      if (\n        location_data[1].condition.code === 1003 ||\n        location_data[1].condition.code === 1006\n      ) {\n        bg = cloudy;\n      } else if (location_data[1].condition.code === 1000) {\n        bg = sunny;\n      } else if (location_data[1].condition.code === 1276) {\n        bg = thunder;\n      } else if (location_data[1].condition.code === 1030) {\n        bg = mist;\n      } else if (\n        location_data[1].condition.code === 1192 ||\n        location_data[1].condition.code === 1243 ||\n        location_data[1].condition.code === 1195\n      ) {\n        bg = heavy_rain;\n      } else if (\n        location_data[1].condition.code === 1063 ||\n        location_data[1].condition.code === 1009\n      ) {\n        bg = overcast;\n      } else {\n        bg = sunny;\n      }\n    }\n    let hourWeather;\n    if (data) {\n      hourWeather = location_data[2].forecastday[0].hour.map(function (\n        item,\n        key\n      ) {\n        return (\n          <div key={key} className=\"panel panel-sm\">\n            <p>{item.time}</p>\n            <p>{item.condition.text}</p>\n            <p>\n              Feels like: {item.feelslike_c}\n              <sup>oc</sup>\n            </p>\n            <img className=\"m-top-20\" src={item.condition.icon} />\n          </div>\n        );\n      });\n    }\n    return (\n      <div className=\"wrapper\" style={{ background: `url(${bg}) no-repeat` }}>\n        <WeatherSearch\n          handleChange={this.props.handleChange}\n          handleSubmit={this.props.handleSubmit}\n        ></WeatherSearch>\n        {this.props.error ? (\n          <p className=\"error-message\">{this.props.errorMessage}</p>\n        ) : null}\n        {data ? (\n          <div className=\"panel-wrapper\">\n            <div className=\"panel main-panel\">\n              <div className=\"panel-info\">\n                <h3>\n                  <strong>{location_data[0].name}</strong>\n                </h3>\n                <p>\n                  {location_data[0].region} - {location_data[0].country}\n                </p>\n                <p className=\"m-top-20\">{location_data[1].condition.text}</p>\n                <p>\n                  Temperature: {location_data[1].feelslike_c} <sup>oc</sup>\n                </p>\n                <p>Humidity: {location_data[1].humidity}</p>\n                <p>Wind Direction: {location_data[1].wind_dir}</p>\n                <p>Wind: {location_data[1].wind_kph} kph</p>\n              </div>\n              <div className=\"panel-icon\">\n                <img src={location_data[1].condition.icon} />\n              </div>\n            </div>\n            <div className=\"panel sun-moon-info\">\n              <div className=\"panel-info\">\n                <p>\n                  <i className=\"wi wi-sunrise\" title=\"sunrise\"></i>\n                  {location_data[2].forecastday[0].astro.sunrise}\n                </p>\n                <p>\n                  <i className=\"wi wi-sunset\"></i>\n                  {location_data[2].forecastday[0].astro.sunset}\n                </p>\n                <p>\n                  <i className=\"wi wi-moonrise\" title=\"sunrise\"></i>\n                  {location_data[2].forecastday[0].astro.moonrise}\n                </p>\n                <p>\n                  <i className=\"wi wi-moonset\"></i>\n                  {location_data[2].forecastday[0].astro.moonset}\n                </p>\n              </div>\n            </div>\n            <div className=\"today-weather-hour\">{hourWeather}</div>\n            <div className=\"forecast m-top-20\">\n              <div className=\"panel\">\n                <div className=\"panel-info\">\n                  <p>Today</p>\n                  <p className=\"m-top-20\">\n                    {location_data[2].forecastday[0].date}\n                  </p>\n                  <p>{location_data[2].forecastday[0].day.condition.text}</p>\n                </div>\n                <div className=\"panel-icon\">\n                  <img\n                    src={location_data[2].forecastday[0].day.condition.icon}\n                  />\n                </div>\n              </div>\n              <div className=\"panel\">\n                <div className=\"panel-info\">\n                  <p>Tommorow</p>\n                  <p className=\"m-top-20\">\n                    {location_data[2].forecastday[1].date}\n                  </p>\n                  <p>{location_data[2].forecastday[1].day.condition.text}</p>\n                </div>\n                <div className=\"panel-icon\">\n                  <img\n                    src={location_data[2].forecastday[1].day.condition.icon}\n                  />\n                </div>\n              </div>\n              <div className=\"panel\">\n                <div className=\"panel-info\">\n                  <p>Day after tommorow</p>\n                  <p className=\"m-top-20\">\n                    {location_data[2].forecastday[2].date}\n                  </p>\n                  <p>{location_data[2].forecastday[2].day.condition.text}</p>\n                </div>\n                <div className=\"panel-icon\">\n                  <img\n                    src={location_data[2].forecastday[2].day.condition.icon}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default WeatherCard;\n","import React from \"react\";\nimport _ from \"lodash\";\n\nimport WeatherCard from \"../../components/WeatherCard\";\nimport WeatherSearch from \"../../components/WeatherSearch\";\n\nclass WeatherContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      weatherData: \"\",\n      searchInput: \"\",\n      error: false,\n      errorText: \"\",\n      latitude: \"\",\n      longitude: \"\",\n      city: \"\",\n    };\n    this.getWeather = this.getWeather.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.showPosition = this.showPosition.bind(this);\n    this.getLocation = this.getLocation.bind(this);\n    this.getIP = this.getIP.bind(this);\n  }\n  componentDidUpdate() {}\n  componentDidMount() {\n    //this.getLocation();\n    this.getIP();\n  }\n  getWeather(city) {\n    const apiUrl = \"https://api.weatherapi.com/v1/\";\n    const apiKey = \"31d059311815419595f144452210902\";\n    const finalUrl =\n      apiUrl + \"forecast.json\" + \"?key=\" + apiKey + \"&q=\" + city + \"&days=3\";\n    fetch(finalUrl)\n      //.then((response) => console.log(response.status))\n      .then((response) => response.json())\n      .then((data) => {\n        if (!data.error) {\n          this.setState({\n            error: false,\n            isLoading: true,\n            weatherData: data,\n          });\n        } else {\n          this.setState({\n            errorText: data.error.message,\n            error: true,\n          });\n          console.log(data.error.message);\n        }\n      });\n    // .catch((error) => console.log(error));\n  }\n  getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(this.showPosition);\n      console.log(this.state.latitude);\n    } else {\n      console.log(\"Geolocation is not supported by this browser.\");\n    }\n  }\n  showPosition(position) {\n    const lat = position.coords.latitude;\n    const long = position.coords.longitude;\n    this.setState({\n      latitude: lat,\n      longitude: long,\n    });\n    this.getWeather(this.state.latitude, this.state.longitude);\n    console.log(position.coords.latitude, position.coords.longitude);\n  }\n  getIP() {\n    fetch(\"https://ipapi.co/8.8.8.8/json/\")\n      //.then((response) => console.log(response.status))\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({\n          city: data.ip,\n        });\n        this.getWeather(data.city);\n      });\n  }\n  handleErrors(response) {\n    if (!response.ok) {\n      throw Error(response.statusText);\n    }\n    return response;\n  }\n  handleChange(e) {\n    this.setState({\n      searchInput: e.target.value,\n    });\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n    this.getWeather(this.state.searchInput);\n  }\n\n  render() {\n    return (\n      <div className=\"container main-container\">\n        <p>{this.state.city}</p>\n        <WeatherCard\n          error={this.state.error}\n          errorMessage={this.state.errorText}\n          data={this.state.weatherData}\n          handleChange={this.handleChange}\n          handleSubmit={this.handleSubmit}\n        ></WeatherCard>\n      </div>\n    );\n  }\n}\n\nexport default WeatherContainer;\n","import \"./App.css\";\nimport \"./css/weather-icons.min.css\";\n\nimport WeatherContainer from \"./container/WeatherContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <WeatherContainer></WeatherContainer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}